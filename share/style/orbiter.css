element.root {
    fill-canvas:        compose;
    fill-color:         #afc;
    fill-radius-x:      0;
    fill-radius-y:      0;
}

element.root / background.space {
    area:               l0 t0 r0 b0;
}

pane.main {
    fill-canvas:        compose;
    fill-color:         #f06;
    fill-radius-y:      14;
    fill-radius-x:      14;
    border-canvas:      compose;
    border-color:       #f04;
    border-area:        l0.5 t0.5 r0.5 b0.5;
    border-size:        2;
    border-blur:        0;
    border-radius-x:    14;
    border-radius-y:    14;
    area:               l32 t32 r290 b32;
}

/ pane / editor {
    region [ l10 t10 r1 b20 ]

    border {
        region [ -1 ] // offset is a field name, but next char of [ indicates we are constructing with the args, its short-hand ]
        offset [ -1 ] // same thing.
        size   [ 2  ]
        #fff         /* members in a class may have a meta descriptor for character hints, so color has meta hint_hash == choose me. */
    }

    fill { color[ #fff ] glow [ 2px #00f ] }

    border {
        color  [ 0 0 0 0.5    ] # multiple args are converted into string input when inside [ ]
        offset [ 1            ] # this however we may try to match against singular constructor with numeric type
        style  [ 0.5 2        ]
        shadow [ inner outter ]
    }

    label {
        id:gadget
           decor[ underline ]
          'a string.. probably goes into a string holder called text, without saying text'
           vec2f[ 1 ]
    }
}

pane / editor : hovered, pressed {

    gadget: { 'ill get you gadget!' }, 300ms cubic


    fill-canvas:        compose;
    fill-color:         #f04;
    text-area:          l10 t8 r8 b8;
    area:               l10.5 t44.5 r200.5 b10.5;
    border-area:        l0 t0 r0 b0;
    border-canvas:      compose;
    border-color:       #f08;
    border-size:        1;
    border-radius-x:    8;
    border-radius-y:    8;
    fill-radius-x:      8;
    fill-radius-y:      8;
    content:            "why cant i make a few more controls";
    text-color:         #00f;
    text-shadow-color:  #000;
    text-shadow-x:      4;
    text-shadow-y:      4;
    text-align-x:       left;
    text-align-y:       top;
}

pane / button.button1 {
    content:            "button";
    area:               l8 t8 r8 b8;
    fill-canvas:        overlay;
    border-canvas:      overlay;
    border-size:        4;
    border-color:       #ffff;
}

pane.debug {
    fill-canvas:        compose;
    fill-color:         #afc;
    area:               r280 t0 r0 b0;
}

/* this should be a comment */
scene.iris {
    fill-canvas:        overlay;
    fill-color:         #0000;
    rotate:             [0 1 0 30deg, 1 0 0 -30deg];
    scale:              1.44 1.44 1.44;
    area:               l0 b256 w256 h256;
}

scene.iris:hovered {
    rotate:             [0 1 0 30deg, 1 0 0 -40deg], 400ms;
}

scene.iris:pressed {
    rotate:             [0 1 0 30deg, 1 0 0 0deg], 400ms;
}